// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QualitySensorData.Data;

#nullable disable

namespace QualitySensorData.Migrations
{
    [DbContext(typeof(QualitySensorDbContext))]
    partial class QualitySensorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QualitySensorData.Model.ConsumptionStat", b =>
                {
                    b.Property<string>("sensorid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("consuption")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("sfloor")
                        .HasColumnType("int");

                    b.Property<string>("utilityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sensorid");

                    b.ToTable("ConsumptionData");
                });

            modelBuilder.Entity("QualitySensorData.Model.FloorConsumptionStat", b =>
                {
                    b.Property<int>("floor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("floor"));

                    b.Property<float>("consumptionOnFoor")
                        .HasColumnType("real");

                    b.Property<float>("consumptionPercent")
                        .HasColumnType("real");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("floor");

                    b.ToTable("floorWiseConsumptionData");
                });

            modelBuilder.Entity("QualitySensorData.Model.MainTankStat", b =>
                {
                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<float>("consumptionTotal")
                        .HasColumnType("real");

                    b.Property<int>("refillCount")
                        .HasColumnType("int");

                    b.Property<float>("totalSensorCount")
                        .HasColumnType("real");

                    b.Property<float>("waterLevel")
                        .HasColumnType("real");

                    b.HasKey("date");

                    b.ToTable("MainTankdata");
                });

            modelBuilder.Entity("QualitySensorData.Model.QualitySensorDataMdl", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("SensorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("clorin")
                        .HasColumnType("real");

                    b.Property<float>("co2")
                        .HasColumnType("real");

                    b.Property<float>("conductivity")
                        .HasColumnType("real");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("floor")
                        .HasColumnType("int");

                    b.Property<float>("humidity")
                        .HasColumnType("real");

                    b.Property<float>("pH")
                        .HasColumnType("real");

                    b.Property<float>("temp")
                        .HasColumnType("real");

                    b.Property<float>("turbidity")
                        .HasColumnType("real");

                    b.Property<int>("wqi")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("QualitySensorDataTable");
                });

            modelBuilder.Entity("QualitySensorData.Model.User", b =>
                {
                    b.Property<int>("empId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("empId"));

                    b.Property<string>("department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("rewardPoint")
                        .HasColumnType("bigint");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("empId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
